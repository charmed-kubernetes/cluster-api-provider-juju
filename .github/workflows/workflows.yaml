name: Test Suite
on:
  pull_request:

jobs:
  integration-test:
    name: VSphere Integration Test
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
      - name: Set env
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "B64_RESOURCES<<$EOF" >> "$GITHUB_ENV"
          base64 test/data/ci-resources.yaml >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
          echo "B64_CREDS<<$EOF" >> "$GITHUB_ENV"
          base64 test/data/ci-resources.yaml >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
          echo "GH_TOKEN=some_token" >> "$GITHUB_ENV"
          echo "DOCKERHUB_USERNAME=some_username" >> "$GITHUB_ENV"
          echo "DOCKERHUB_PASSWORD=some_password" >> "$GITHUB_ENV"
      - name: Test resources
        run: echo "$B64_RESOURCES" | base64 -d 
      - name: Test token
        run: echo "$GH_TOKEN" 
      - name: Test username
        run: echo "$DOCKERHUB_USERNAME" 
      - name: Test password
        run: echo "$DOCKERHUB_PASSWORD"
      - name: Test creds
        run: echo "$B64_CREDS" | base64 -d 
      

# jobs:
#   integration-test:
#     name: VSphere Integration Test
#     runs-on: self-hosted
#     timeout-minutes: 120
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v3
#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.8
#       - name: Setup operator environment
#         uses: charmed-kubernetes/actions-operator@main
#         with:
#           provider: vsphere
#           juju-channel: 3.1/stable
#           credentials-yaml: ${{ secrets.CREDENTIALS_YAML }}
#           clouds-yaml: ${{ secrets.CLOUDS_YAML }}
#           bootstrap-constraints: "arch=amd64 cores=2 mem=4G"
#           bootstrap-options: >-
#             ${{ secrets.JAMMY_BOOTSTRAP_OPTIONS }}
#             --model-default datastore=vsanDatastore
#             --model-default primary-network=VLAN_2763
#             --model-default force-vm-hardware-version=17
#       - name: Run test
#         run: tox -e integration -- --basetemp=/home/ubuntu/pytest
#       - name: Setup Debug Artifact Collection
#         if: ${{ failure() }}
#         run: mkdir tmp
#       - name: Collect Juju Status
#         if: ${{ failure() }}
#         run: |
#           juju status 2>&1 | tee tmp/juju-status.txt
#           juju-crashdump -s -m controller -a debug-layer -a config -o tmp/
#           mv juju-crashdump-* tmp/ | true
#       - name: Upload debug artifacts
#         if: ${{ failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: test-run-artifacts
#           path: tmp